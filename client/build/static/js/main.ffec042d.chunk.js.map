{"version":3,"sources":["components/PetForm.jsx","components/Display.jsx","components/EditPet.jsx","components/Detail.jsx","App.js","serviceWorker.js","index.js"],"names":["PetForm","props","useState","name","setName","type","setType","description","setDescription","skill1","setSkills1","skill2","setSkills2","skill3","setSkills3","errors","setErrors","className","to","onSubmit","e","preventDefault","adoptPet","axios","post","then","res","console","log","data","navigate","catch","err","onChange","target","value","properties","message","Display","pets","setPets","useEffect","get","class","map","pet","i","key","_id","EditPet","setSkill1","setSkill2","setSkill3","updatedPet","put","Detail","onClick","delete","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ffec042d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\nimport '../App.css';\nimport { Link } from '@reach/router';\n\nconst PetForm = props => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill1, setSkills1] = useState(\"\");\n    const [skill2, setSkills2] = useState(\"\");\n    const [skill3, setSkills3] = useState(\"\");\n    const [errors, setErrors] = useState ({});\n\n    const CreatePet = e => {\n        e.preventDefault();\n        const adoptPet = {name, type, description, skill1, skill2, skill3};\n        axios.post(\"http://localhost:8000/api/pets/new\", adoptPet)\n            .then(res => {\n                console.log(res);\n                if(res.data.errors) {\n                    setErrors(res.data.errors);\n                }else{\n                    navigate(\"/\");\n                }\n            }).catch(err => console.log(err));\n    }\n    return(\n        <div className=\"container\">\n            <h1 className=\"card-header bg-dark text-light mb-3\"> Know a pet needing a home? </h1>\n            <Link to=\"/\" className=\"btn btn-dark float-right\"> Go back home</Link>\n                <form className=\"col-sm-8\" onSubmit={CreatePet}>\n                    <div className=\"form-group\">\n                        <label>Pet Name:</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setName(e.target.value)} value={name}/>\n                        {errors.name ? <p className=\"text-danger\"> {errors.name.properties.message}</p>: \"\" }\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Pet Type:</label>\n                        <input type=\"text\" className=\"form-control\" onChange={ e => setType(e.target.value)} value={type} />\n                        {errors.type ? <p className=\"text-danger\"> {errors.type.properties.message}</p>: \"\" }\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Pet Description:</label>\n                        <input type=\"text\" value={description} className=\"form-control\" onChange={ e => setDescription(e.target.value)}/>\n                        {errors.description ? <p className=\"text-danger\"> {errors.description.properties.message}</p>: \"\" }\n                    </div>\n                    <div className=\"row\">\n                    <h1 className=\"card-header bg-dark text-light mb-3\"> Skills (optional) </h1>\n                    </div>\n                        <div className=\"form-group\">\n                            <label>Skill 1:</label>\n                            <input type=\"text\" className=\"form-control\" onChange={e => setSkills1(e.target.value)} value={skill1}/>\n                        </div> \n                        <div className=\"form-group\">\n                            <label>Skill 2:</label>\n                            <input type=\"text\" className=\"form-control\" onChange={e => setSkills2(e.target.value)} value={skill2}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Skill 3:</label>\n                            <input type=\"text\" className=\"form-control\" onChange={e => setSkills3(e.target.value)} value={skill3}/>\n                        </div>\n                    <input type=\"submit\" value=\"Add Pet\" className=\"btn btn-dark btn-block\"/>\n                </form>\n        </div>\n    )\n}\nexport default PetForm;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from '@reach/router';\n\nconst Display = props => {\n\n    const [pets, setPets] = useState([]);\n\n    const fetchPets = () => {\n        axios.get(\"http://localhost:8000/api\")\n        .then(res => {\n            console.log(res);\n            setPets(res.data);\n        })\n        .catch(err => console.log(err));\n    }\n    useEffect( () => {\n        fetchPets();\n    }, []);\n\nreturn (\n    <div>\n        <h2>These Pets are looking for a good home</h2>\n        <Link className=\"btn btn-dark mb-3 float-right\" to=\"/pets/new\"> Add a pet </Link>\n        <table className=\"table\">\n            <thead class=\"thead-dark\">\n                <tr>\n                <th>Name</th>\n                <th>Type</th>\n                <th>Actions</th>\n                </tr>\n            </thead>\n        <tbody>\n        {pets.map( (pet, i) => \n            <tr key={pet._id}>\n                <td>{pet.name}</td>\n                <td>{pet.type}</td>\n                <td> <Link className=\"btn btn-outline-dark mr-3\" to={`/details/${pet._id}`}>Details</Link>\n                <Link className=\"btn btn-outline-dark\" to={`/edit/${pet._id}`}>Edit</Link> </td>\n            </tr>\n            )}\n        </tbody>\n        </table>\n    </div>\n)\n        }\nexport default Display","import React, { useState, useEffect } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\nimport { Link } from '@reach/router';\nimport '../App.css';\n\nconst EditPet = props => {\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [skill1, setSkill1] = useState(\"\");\n    const [skill2, setSkill2] = useState(\"\");\n    const [skill3, setSkill3] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    useEffect( () => {\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\n        .then( res => {\n            console.log(res);\n            setName(res.data.name);\n            setDescription(res.data.description);\n            setType(res.data.type);\n            setSkill1(res.data.skill1);\n            setSkill2(res.data.skill2);\n            setSkill3(res.data.skill3);\n        }).catch(errors => console.log(errors));\n    }, [props._id]);\n\n\n    const UpdatePet = e => {\n        e.preventDefault();\n        const updatedPet = {name, description, type, skill1, skill2, skill3};\n        axios.put(`http://localhost:8000/api/pets/${props._id}`, updatedPet)\n            .then(res => {\n                console.log(res);\n                if(res.data.errors) {\n                    setErrors(res.data.errors);\n                }else {\n                    navigate(\"/\");\n                }\n            }).catch(err => console.log(err));\n    }\n\nreturn(\n    <div className=\"container\">\n        <Link to=\"/\" className=\"btn btn-outline-dark mb-3\"> Go back home</Link>\n        <div className=\"row\">\n            <form className=\"box col-sm-8\" onSubmit={UpdatePet}>\n                <div className=\"form-group\">\n                    <h1 className=\"card-header bg-dark text-light mb-3\"> Edit Pet </h1>\n                    <label>Pet Name:</label>\n                    <input type=\"text\" className=\"form-control\" onChange={ e => setName(e.target.value)} value={name}/>\n                    {errors.name ? <p className=\"text-danger\"> {errors.name.properties.message}</p>: \"\" }\n                </div>\n                <div className=\"form-group\">\n                    <label>Pet Type:</label>\n                    <input type=\"text\" name=\"type\" className=\"form-control\" onChange={ e => setType(e.target.value)} value={type}/>\n                    {errors.type ? <p className=\"text-danger\"> {errors.type.properties.message}</p>: \"\" }\n                </div>\n                <div className=\"form-group\">\n                    <label>Pet Description:</label>\n                    <input type=\"text\" name=\"description\" className=\"form-control\" onChange={ e => setDescription(e.target.value)} value={description}/>\n                    {errors.description ? <p className=\"text-danger\"> {errors.description.properties.message}</p>: \"\" }\n                </div>\n                <div className=\"col-m-8\">\n                <h1 className=\"card-header bg-dark text-light mb-3\"> Skills(optional) </h1>\n                    <div className=\"form-group\">\n                        <label>Skill 1:</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setSkill1(e.target.value)} value={skill1}/>\n                    </div> \n                    <div className=\"form-group\">\n                        <label>Skill 2:</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setSkill2(e.target.value)} value={skill2}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Skill 3:</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setSkill3(e.target.value)} value={skill3}/>\n                    </div>\n                </div>\n                <input type=\"submit\" value=\"Edit Pet\" className=\"btn btn-dark btn-block\"/>\n            </form>\n        </div>\n    </div>\n    )\n}\n\nexport default EditPet;","import React, { useState, useEffect } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\nimport { Link } from '@reach/router';\nimport '../App.css';\n\nconst Detail = props => {\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [skill1, setSkill1] = useState(\"\");\n    const [skill2, setSkill2] = useState(\"\");\n    const [skill3, setSkill3] = useState(\"\");\n\n\n    useEffect( () => {\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\n        .then( res => {\n            setName(res.data.name);\n            setDescription(res.data.description);\n            setType(res.data.type);\n            setSkill1(res.data.skill1);\n            setSkill2(res.data.skill2);\n            setSkill3(res.data.skill3);\n        }).catch(errors => console.log(errors));\n    }, [props._id]);\n\n    const remove = () => {\n        axios.delete(`http://localhost:8000/api/pets/${props._id}`)\n        .then(res => {\n            console.log(res);\n            navigate(\"/\");\n        })\n        .catch(err => console.log(err));\n    }\n    return (\n        <div className=\"container\">\n            <Link to=\"/\" className=\"btn btn-outline-dark mb-3\"> Go back home</Link>\n            <div className=\"card mb-3 container2\">\n                <h1 className=\"card-header bg-dark text-light\">Details about {name}</h1>\n                    <div className=\"card-body\">\n                    <button className=\"btn btn-danger float-right\" onClick={remove}>Adopt {name} </button>\n                    <p>Pet Type:{type}</p>\n                    <p>Description: {description}</p>\n                    <p>Skills: \n                        <li className=\"right\">{skill1} </li>\n                        <li className=\"right\">{skill2} </li>\n                        <li className=\"right\">{skill3} </li> </p>\n                </div>\n            </div>\n        </div>\n        )\n    }\n\nexport default Detail;\n\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Router } from '@reach/router';\nimport PetForm from \"./components/PetForm\";\nimport Display from \"./components/Display\";\nimport EditPet from \"./components/EditPet\";\nimport Detail from \"./components/Detail\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>Pet Shelter</h1>\n      <Router>\n        <Display path=\"/\" />\n        <PetForm path=\"/pets/new\" />\n        <Detail path=\"/details/:_id\" />\n        <EditPet path=\"/edit/:_id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}